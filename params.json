{
  "name": "Blog",
  "tagline": "This is my Blog.",
  "body": "## 成员变量和局部变量的区别\r\n\r\n* A:在类中的位置不同                     \r\n\r\n\t* 成员变量：在类中方法外                  \r\n\r\n\t* 局部变量：在方法定义中或者方法声明上           \r\n\r\n* B:在内存中的位置不同                    \r\n\r\n\t* 成员变量：在堆内存(成员变量属于对象,对象进堆内存)   \r\n\r\n\t* 局部变量：在栈内存(局部变量属于方法,方法进栈内存)   \r\n\r\n* C:生命周期不同                       \r\n\r\n\t* 成员变量：随着对象的创建而存在，随着对象的消失而消失   \r\n\r\n\t* 局部变量：随着方法的调用而存在，随着方法的调用完毕而消失 \r\n\r\n* D:初始化值不同                       \r\n\r\n\t* 成员变量：有默认初始化值                 \r\n\r\n\t* 局部变量：没有默认初始化值，必须定义，赋值，然后才能使用。\r\n\r\n## 控制跳转语句标号\r\n\r\n* 标号:标记某个循环对其控制\r\n\r\n* 标号组成规则:其实就是合法的标识\r\n\r\n* wx:for...\r\n\r\n\r\n\r\n\r\n# 原码反码补码\r\n\r\n* B:有符号数据表示法的几种方式\r\n\r\n\t* 原码\r\n\r\n\t\t* 就是二进制定点表示法，即最高位为符号位，“0”表示正，“1”表示负，其余位表示数值的大小。\r\n\r\n\t\t* 通过一个字节,也就是8个二进制位表示+7和-7\r\n\r\n\t\t* 0(符号位)\t0000111\r\n\r\n\t\t* 1(符号位)\t0000111\r\n\r\n\t* 反码\r\n\r\n\t\t* 正数的反码与其原码相同；负数的反码是对其原码逐位取反，但符号位除外。\r\n\r\n\t* 补码\r\n\r\n\t\t* 正数的补码与其原码相同；负数的补码是在其反码的末位加1。\r\n\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}